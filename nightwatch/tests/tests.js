const selectors = require('../supporting/selectors')
const data = require('../supporting/data')

module.exports = {
    beforeEach: browser => {
        browser.url('http://localhost:3000')

    },
    after: browser => {
        browser.end()
    },
    // "WQ27": browser => {
    //     browser
    //         .click(selectors.buttons.menuIcon)
    //         .waitForElementVisible(selectors.buttons.enterOption, 4000)
    //         .click(selectors.buttons.enterOption)
    //         .pause(3000)
    //         .waitForElementVisible(selectors.fields.hdrInput, 4000)
    //         .setValue(selectors.fields.hdrInput, data.WQ27.hdr)
    //         .setValue(selectors.fields.mkeInput, data.WQ27.mke)
    //         .setValue(selectors.fields.oriInput, data.WQ27.ori)
    //         .setValue(selectors.fields.namInput, data.WQ27.nam)
    //         .click(selectors.fields.sexInput)
    // },

    "WQ29": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 1000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.fields.hdrInput, 1000)
            .setValue(selectors.fields.hdrInput, data.WQ29.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ29.mke)
            .setValue(selectors.fields.oriInput, data.WQ29.oai)
            .setValue(selectors.fields.namInput, data.WQ29.nam)
            // .setValue(selectors.fields.sexInput, data.goodData.WQ29.sex)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.unknown)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.americanIndian)
            .setValue(selectors.fields.hgtInput, data.WQ29.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ29.wgt)
            .setValue(selectors.fields.haiInput, data.WQ29.hai)
            .setValue(selectors.fields.offInput, data.WQ29.off)
            .setValue(selectors.fields.dowInput, data.WQ29.dow)
            .setValue(selectors.fields.olnInput, data.WQ29.oln)
            .setValue(selectors.fields.olsInput, data.WQ29.ols)
            .setValue(selectors.fields.oldInput, data.WQ29.old)
            .setValue(selectors.fields.licInput, data.WQ29.lic)
            .setValue(selectors.fields.lisInput, data.WQ29.lis)
            .setValue(selectors.fields.lidInput, data.WQ29.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.queryBody).text.to.contain("Johnson1234567890$#.Ab*&.J8765kI90.MRS Bingo Big Daddy $$$!!!!!!!.U.I.190.999.blackerish.123456789Zsw@#$.2017-02-07.aBcdef!23$567896Hnj*.TX.2002-01-31.12345Hui.HI.1941-04-06")

    },
    "WQ253": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 1000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.fields.widInput, 1000)
            .click(selectors.fields.widInput)
            .setValue(selectors.fields.widInput, data.WQ253.wid)
            .setValue(selectors.fields.hdrInput, data.WQ253.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ253.mke)
            .setValue(selectors.fields.oriInput, data.WQ253.oai)
            .setValue(selectors.fields.namInput, data.WQ253.nam)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.female)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.white)
            .setValue(selectors.fields.hgtInput, data.WQ253.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ253.wgt)
            .setValue(selectors.fields.haiInput, data.WQ253.hai)
            .setValue(selectors.fields.offInput, data.WQ253.off)
            .setValue(selectors.fields.dowInput, data.WQ253.dow)
            .setValue(selectors.fields.olnInput, data.WQ253.oln)
            .setValue(selectors.fields.olsInput, data.WQ253.ols)
            .setValue(selectors.fields.oldInput, data.WQ253.old)
            .setValue(selectors.fields.licInput, data.WQ253.lic)
            .setValue(selectors.fields.lisInput, data.WQ253.lis)
            .setValue(selectors.fields.lidInput, data.WQ253.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.queryBody).text.to.contain("1278569032.^yh8i(kmtred$3234Ft.hu*!.456iOKuj0.My name is what I want it to b.F.W.098.999.chocolatey.ju6^89iesryy3!s.1981-10-19.JKio98765%7)(jnye#)t.CA.2005-04-16.Mai7629j.MN.1978-07-19")

    },
    //Will not pass at this time due to but WQ2-68
    // "WQ259": browser => {
    //     browser
    //         .click(selectors.buttons.menuIcon)
    //         .waitForElementVisible(selectors.buttons.cancelOption, 1000)
    //         .click(selectors.buttons.cancelOption)
    //         .waitForElementVisible(selectors.fields.widInput, 1000)
    //         .setValue(selectors.fields.widInput, data.WQ259.wid)
    //         .setValue(selectors.fields.resInput, data.WQ259.res)
    //         .setValue(selectors.fields.datInput, data.WQ259.date)
    //         .click(selectors.buttons.saveBtn)
    //     browser.expect.element(selectors.paragrahHeadings.queryBody)
    // },
    "WQ234": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 1000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.fields.hdrInput, 1000)
            .setValue(selectors.fields.hdrInput, data.WQ234.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ234.mke)
            .setValue(selectors.fields.oriInput, data.WQ234.ori)
            .setValue(selectors.fields.namInput, data.WQ234.nam)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.unknown)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.americanIndian)
            .setValue(selectors.fields.hgtInput, data.WQ234.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ234.wgt)
            .setValue(selectors.fields.haiInput, data.WQ234.hai)
            .setValue(selectors.fields.offInput, data.WQ234.off)
            .setValue(selectors.fields.dowInput, data.WQ234.dow)
            .setValue(selectors.fields.olnInput, data.WQ234.oln)
            .setValue(selectors.fields.olsInput, data.WQ234.ols)
            .setValue(selectors.fields.oldInput, data.WQ234.old)
            .setValue(selectors.fields.licInput, data.WQ234.lic)
            .setValue(selectors.fields.lisInput, data.WQ234.lis)
            .setValue(selectors.fields.lidInput, data.WQ234.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "MKE" field can only include characters from the English Alphabet or special characters.')
        // browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Originating Agency Identifier" field can only include characters from the English Alphabet or numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field needs to have a value greater than 0.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field needs to have a value greater than 0.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Hair" field can only include characters from the English Alphabet or special characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "DL State" field can only include a valid State/Territory abbreviation.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License Plate" field can only include characters from the English Alphabet or numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License State" field can only include a valid State/Territory abbreviation.')
    },
    "WQ257": browser => {
            browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 1000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.fields.widInput, 1000)
            .click(selectors.fields.widInput)
            .setValue(selectors.fields.widInput, data.WQ257.wid)
            .setValue(selectors.fields.hdrInput, data.WQ257.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ257.mke)
            .setValue(selectors.fields.oriInput, data.WQ257.oai)
            .setValue(selectors.fields.namInput, data.WQ257.nam)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.female)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.white)
            .setValue(selectors.fields.hgtInput, data.WQ257.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ257.wgt)
            .setValue(selectors.fields.haiInput, data.WQ257.hai)
            .setValue(selectors.fields.offInput, data.WQ257.off)
            .setValue(selectors.fields.dowInput, data.WQ257.dow)
            .setValue(selectors.fields.olnInput, data.WQ257.oln)
            .setValue(selectors.fields.olsInput, data.WQ257.ols)
            .setValue(selectors.fields.oldInput, data.WQ257.old)
            .setValue(selectors.fields.licInput, data.WQ257.lic)
            .setValue(selectors.fields.lisInput, data.WQ257.lis)
            .setValue(selectors.fields.lidInput, data.WQ257.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Warrant ID" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "MKE" field can only include characters from the English Alphabet or special characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Originating Agency Identifier" field can only include characters from the English Alphabet or numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field needs to have a value greater than 0.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field needs to have a value greater than 0.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Hair" field can only include characters from the English Alphabet or special characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "DL State" field can only include a valid State/Territory abbreviation.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License Plate" field can only include characters from the English Alphabet or numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License State" field can only include a valid State/Territory abbreviation.')
    },

    "WQ261": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.cancelOption, 1000)
            .click(selectors.buttons.cancelOption)
            .waitForElementVisible(selectors.fields.widInput, 1000)
            .click(selectors.fields.widInput)
            .setValue(selectors.fields.widInput, data.WQ261.wid)
            .setValue(selectors.fields.resInput, data.WQ261.res)
            .setValue(selectors.fields.datInput, data.WQ261.date)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Warrant ID" field can only include numeric characters.')
    },
    "WQ227": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 1000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.fields.hdrInput, 1000)
            .setValue(selectors.fields.hdrInput, data.WQ227.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ227.mke)
            .setValue(selectors.fields.oriInput, data.WQ227.oai)
            .setValue(selectors.fields.namInput, data.WQ227.nam)
            // .setValue(selectors.fields.sexInput, data.WQ227.sex)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.unknown)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.americanIndian)
            .setValue(selectors.fields.hgtInput, data.WQ227.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ227.wgt)
            .setValue(selectors.fields.haiInput, data.WQ227.hai)
            .setValue(selectors.fields.offInput, data.WQ227.off)
            .setValue(selectors.fields.dowInput, data.WQ227.dow)
            .setValue(selectors.fields.olnInput, data.WQ227.oln)
            .setValue(selectors.fields.olsInput, data.WQ227.ols)
            .setValue(selectors.fields.oldInput, data.WQ227.old)
            .setValue(selectors.fields.licInput, data.WQ227.lic)
            .setValue(selectors.fields.lisInput, data.WQ227.lis)
            .setValue(selectors.fields.lidInput, data.WQ227.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Header" field should be between 9 and 19 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "MKE" field should be between 2 and 4 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Originating Agency Identifier" field should be 9 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Name" field should be between 3 and 30 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field should be 3 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field should be between 1 and 3 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Hair" field should be between 3 and 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Offense" field should be between 5 and 15 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Drivers License" field should be between 1 and 20 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "DL State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License Plate" field should be between 5 and 8 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License State" field should be 2 characters long.')
    },
    "WQ250": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 1000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.fields.widInput, 3000)
            .setValue(selectors.fields.widInput, data.WQ250.wid)
            .setValue(selectors.fields.hdrInput, data.WQ250.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ250.mke)
            .setValue(selectors.fields.oriInput, data.WQ250.oai)
            .setValue(selectors.fields.namInput, data.WQ250.nam)
            .click(selectors.paragrahHeadings.dropDownBoxes.sexField.unknown)
            .click(selectors.paragrahHeadings.dropDownBoxes.raceField.americanIndian)
            .setValue(selectors.fields.hgtInput, data.WQ250.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ250.wgt)
            .setValue(selectors.fields.haiInput, data.WQ250.hai)
            .setValue(selectors.fields.offInput, data.WQ250.off)
            .setValue(selectors.fields.dowInput, data.WQ250.dow)
            .setValue(selectors.fields.olnInput, data.WQ250.oln)
            .setValue(selectors.fields.olsInput, data.WQ250.ols)
            .setValue(selectors.fields.oldInput, data.WQ250.old)
            .setValue(selectors.fields.licInput, data.WQ250.lic)
            .setValue(selectors.fields.lisInput, data.WQ250.lis)
            .setValue(selectors.fields.lidInput, data.WQ250.lid)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Warrant ID" field should be 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Header" field should be between 9 and 19 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "MKE" field should be between 2 and 4 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Originating Agency Identifier" field should be 9 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Name" field should be between 3 and 30 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Height" field should be 3 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Weight" field should be between 1 and 3 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Hair" field should be between 3 and 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Offense" field should be between 5 and 15 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Drivers License" field should be between 1 and 20 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "DL State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License Plate" field should be between 5 and 8 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "License State" field should be 2 characters long.')
    },
    "WQ260": browser => {
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.cancelOption, 1000)
            .click(selectors.buttons.cancelOption)
            .waitForElementVisible(selectors.fields.widInput, 1000)
            .click(selectors.fields.widInput)
            .setValue(selectors.fields.widInput, data.WQ260.wid)
            .setValue(selectors.fields.resInput, data.WQ260.res)
            .setValue(selectors.fields.datInput, data.WQ260.date)
            .click(selectors.buttons.saveBtn)
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Warrant ID" field should be 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.errorList).text.to.contain('The "Reason for Cancellation" field should be between 10 and 150 characters long.')
    },
}