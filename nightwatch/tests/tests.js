const selectors = require('../supporting/selectors')
const data = require('../supporting/data')

module.exports = {
    beforeEach: browser => {
        browser.url('http://localhost:3000')

    },
    after: browser => {
        browser.end()
    },
    "WQ27Enter": browser => {//Enter Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 2000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.paragrahHeadings.hdrHeader, 2000)
            .setValue(selectors.fields.hdrInput, data.WQ27.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ27.mke)
            .setValue(selectors.fields.oriInput, data.WQ27.ori)
            .setValue(selectors.fields.namInput, data.WQ27.nam)
            .click(selectors.fields.sexInput + ' ' + selectors.dropDownBoxes.sexField.unknown)
            .click(selectors.fields.racInput + ' ' + selectors.dropDownBoxes.raceField.unknown)
            .setValue(selectors.fields.hgtInput, data.WQ27.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ27.wgt)
            .setValue(selectors.fields.haiInput, data.WQ27.hai)
            .setValue(selectors.fields.offInput, data.WQ27.off)
            .setValue(selectors.fields.dowInput, data.WQ27.dow)
            .setValue(selectors.fields.olnInput, data.WQ27.oln)
            .setValue(selectors.fields.olsInput, data.WQ27.ols)
            .setValue(selectors.fields.oldInput, data.WQ27.old)
            .setValue(selectors.fields.licInput, data.WQ27.lic)
            .setValue(selectors.fields.lisInput, data.WQ27.lis)
            .setValue(selectors.fields.lidInput, data.WQ27.lid)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.queryBody).text.to.contain('123abc!@#.A#+.def456ghi.A1#.U.U.001.001.red.AB12#.1900-01-01.1.UT.1900-01-01.AB123.HI.1900-01-01')

    },
    "WQ27Modify": browser => {//Modify Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 2000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.paragrahHeadings.widHeader, 2000)
            .setValue(selectors.fields.widInput, data.WQ27.wid)
            .setValue(selectors.fields.hdrInput, data.WQ27.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ27.mke)
            .setValue(selectors.fields.oriInput, data.WQ27.ori)
            .setValue(selectors.fields.namInput, data.WQ27.nam)
            .click(selectors.fields.sexInput + ' ' + selectors.dropDownBoxes.sexField.unknown)
            .click(selectors.fields.racInput + ' ' + selectors.dropDownBoxes.raceField.unknown)
            .setValue(selectors.fields.hgtInput, data.WQ27.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ27.wgt)
            .setValue(selectors.fields.haiInput, data.WQ27.hai)
            .setValue(selectors.fields.offInput, data.WQ27.off)
            .setValue(selectors.fields.dowInput, data.WQ27.dow)
            .setValue(selectors.fields.olnInput, data.WQ27.oln)
            .setValue(selectors.fields.olsInput, data.WQ27.ols)
            .setValue(selectors.fields.oldInput, data.WQ27.old)
            .setValue(selectors.fields.licInput, data.WQ27.lic)
            .setValue(selectors.fields.lisInput, data.WQ27.lis)
            .setValue(selectors.fields.lidInput, data.WQ27.lid)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.queryBody).text.to.contain('1234567890.123abc!@#.A#+.def456ghi.A1#.U.U.001.001.red.AB12#.1900-01-01.1.UT.1900-01-01.AB123.HI.1900-01-01')
    },
    "WQ211Enter": browser => {//Enter Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 2000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.paragrahHeadings.hdrHeader, 2000)
            .setValue(selectors.fields.hdrInput, data.WQ211.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ211.mke)
            .setValue(selectors.fields.oriInput, data.WQ211.ori)
            .setValue(selectors.fields.namInput, data.WQ211.nam)
            .click(selectors.fields.sexInput + ' ' + selectors.dropDownBoxes.sexField.unknown)
            .click(selectors.fields.racInput + ' ' + selectors.dropDownBoxes.raceField.unknown)
            .setValue(selectors.fields.hgtInput, data.WQ211.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ211.wgt)
            .setValue(selectors.fields.haiInput, data.WQ211.hai)
            .setValue(selectors.fields.offInput, data.WQ211.off)
            .setValue(selectors.fields.dowInput, data.WQ211.dow)
            .setValue(selectors.fields.olnInput, data.WQ211.oln)
            .setValue(selectors.fields.olsInput, data.WQ211.ols)
            .setValue(selectors.fields.oldInput, data.WQ211.old)
            .setValue(selectors.fields.licInput, data.WQ211.lic)
            .setValue(selectors.fields.lisInput, data.WQ211.lis)
            .setValue(selectors.fields.lidInput, data.WQ211.lid)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Header" field should be between 9 and 19 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "MKE" field should be between 2 and 4 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Originating Agency Identifier" field should be 9 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Name" field should be between 3 and 30 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Height" field should be 3 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Weight" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Hair" field should be between 3 and 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Offense" field should be between 5 and 15 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain(`The "Date of Warrant/Violation" field must be entered as a date, MM/DD/YYYY, no earlier than 01/01/1900 and no later than today's date.`)
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "DL State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "DL Expiration Date" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License Plate" field should be between 5 and 8 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License Expiration Date" field can only include numeric characters.')

    },
    "WQ211Modify": browser => { //Modify Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 2000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.fields.widInput, 2000)
            .setValue(selectors.fields.widInput, data.WQ211.wid)
            .setValue(selectors.fields.hdrInput, data.WQ211.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ211.mke)
            .setValue(selectors.fields.oriInput, data.WQ211.ori)
            .setValue(selectors.fields.namInput, data.WQ211.nam)
            .setValue(selectors.fields.hgtInput, data.WQ211.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ211.wgt)
            .setValue(selectors.fields.haiInput, data.WQ211.hai)
            .setValue(selectors.fields.offInput, data.WQ211.off)
            .setValue(selectors.fields.dowInput, data.WQ211.dow)
            .setValue(selectors.fields.olnInput, data.WQ211.oln)
            .setValue(selectors.fields.olsInput, data.WQ211.ols)
            .setValue(selectors.fields.oldInput, data.WQ211.old)
            .setValue(selectors.fields.licInput, data.WQ211.lic)
            .setValue(selectors.fields.lisInput, data.WQ211.lis)
            .setValue(selectors.fields.lidInput, data.WQ211.lid)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Warrant ID" field should be 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Header" field should be between 9 and 19 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "MKE" field should be between 2 and 4 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Originating Agency Identifier" field should be 9 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Name" field should be between 3 and 30 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Height" field should be 3 characters long.')
        // browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Weight" field must be included.') Bug WQ2-33
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Hair" field should be between 3 and 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Offense" field should be between 5 and 15 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain(`The "Date of Warrant/Violation" field must be entered as a date, MM/DD/YYYY, no earlier than 01/01/1900 and no later than today's date.`)
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "DL State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "DL Expiration Date" field can only include numeric characters.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License Plate" field should be between 5 and 8 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License State" field should be 2 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "License Expiration Date" field can only include numeric characters.')

    },
    "WQ229Enter": browser => { //Enter Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.enterOption, 2000)
            .click(selectors.buttons.enterOption)
            .waitForElementVisible(selectors.paragrahHeadings.hdrHeader, 2000)
            .setValue(selectors.fields.hdrInput, data.WQ229.hdr)
            .setValue(selectors.fields.mkeInput, data.WQ229.mke)
            .setValue(selectors.fields.oriInput, data.WQ229.ori)
            .setValue(selectors.fields.namInput, data.WQ229.nam)
            .setValue(selectors.fields.hgtInput, data.WQ229.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ229.wgt)
            .setValue(selectors.fields.haiInput, data.WQ229.hai)
            .setValue(selectors.fields.offInput, data.WQ229.off)
            .setValue(selectors.fields.dowInput, data.WQ229.dow)
            .setValue(selectors.fields.olnInput, data.WQ229.oln)
            .setValue(selectors.fields.olsInput, data.WQ229.ols)
            .setValue(selectors.fields.oldInput, data.WQ229.old)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Header" field should be between 9 and 19 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "MKE" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Originating Agency Identifier" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Name" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Sex" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Race / Ethnicity" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Height" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Weight" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Hair" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Offense" field must be included.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain(`The "Date of Warrant/Violation" field must be included.`)
    },
    "WQ229Modify": browser => { //Modify Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.modifyOption, 2000)
            .click(selectors.buttons.modifyOption)
            .waitForElementVisible(selectors.fields.widInput, 2000)
            .setValue(selectors.fields.widInput, data.WQ229.wid)
            .setValue(selectors.fields.hdrInput, data.WQ229.hdr2)
            .setValue(selectors.fields.mkeInput, data.WQ229.mke)
            .setValue(selectors.fields.oriInput, data.WQ229.ori)
            .setValue(selectors.fields.namInput, data.WQ229.nam)
            .setValue(selectors.fields.hgtInput, data.WQ229.hgt)
            .setValue(selectors.fields.wgtInput, data.WQ229.wgt)
            .setValue(selectors.fields.haiInput, data.WQ229.hai)
            .setValue(selectors.fields.offInput, data.WQ229.off)
            .setValue(selectors.fields.dowInput, data.WQ229.dow)
            .setValue(selectors.fields.olnInput, data.WQ229.oln)
            .setValue(selectors.fields.olsInput, data.WQ229.ols)
            .setValue(selectors.fields.oldInput, data.WQ229.old)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Warrant ID" field should be 10 characters long.')
    },
    // BUG WQ2-68
    // "WQ2191" : browser => { Minimum Cancel Wanted
    //     browser
    //     .click(selectors.buttons.menuIcon)
    //     .waitForElementVisible(selectors.buttons.cancelOption, 2000)
    //     .click(selectors.buttons.cancelOption)
    //     .waitForElementVisible(selectors.fields.widInput, 2000)
    //     .setValue(selectors.fields.widInput, data.WQ2191.wid)
    //     .setValue(selectors.fields.resInput, data.WQ2191.res)
    //     .setValue(selectors.fields.datInput, data.WQ2191.dat)
    //     .click(selectors.buttons.saveBtn)
    //     .expect.element()
    //},
    "WQ2192": browser => {   //<minimum Cancel Wanted
        browser
            .click(selectors.buttons.menuIcon)
            .waitForElementVisible(selectors.buttons.cancelOption, 2000)
            .click(selectors.buttons.cancelOption)
            .waitForElementVisible(selectors.fields.widInput, 2000)
            .setValue(selectors.fields.widInput, data.WQ2192.wid)
            .setValue(selectors.fields.resInput, data.WQ2192.res)
            .setValue(selectors.fields.datInput, data.WQ2192.dat)
            .click(selectors.buttons.saveBtn)
            .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Warrant ID" field should be 10 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Reason for Cancellation" field should be between 10 and 150 characters long.')
        browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Date of Cancellation" field can only include characters from the English Alphabet or numeric characters.')


    },
    // Can't figure out why the test won't click the button -AJ advised to comment test out
    // "WQ2193": browser => {   //Cancel Wanted Empty Fields
    //     browser
    //         .click(selectors.buttons.menuIcon)
    //         .waitForElementVisible(selectors.buttons.cancelOption, 2000)
    //         .click(selectors.buttons.cancelOption)
    //         .waitForElementVisible(selectors.fields.widInput, 2000)
    //         .setValue(selectors.fields.widInput, data.WQ2193.wid)
    //         // .setValue(selectors.fields.resInput, data.WQ2193.res)
    //         .click(selectors.buttons.saveBtn)
    //         .pause(10000)
    //         .expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Warrant ID" field should be 10 characters long.')
    //     browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Reason for Cancellation" field must be included.')
    //     browser.expect.element(selectors.paragrahHeadings.results).text.to.contain('The "Date of Cancellation" field must be included.')
    // }
}